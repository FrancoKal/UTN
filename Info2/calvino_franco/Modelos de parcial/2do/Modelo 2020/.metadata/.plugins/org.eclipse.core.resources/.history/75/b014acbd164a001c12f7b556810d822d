/*
 * MDE_Serie.c
 *
 *  Created on: 20 nov. 2021
 *      Author: franco
 */
#include "MDE_ComunicacionSerie.h"
#include "PuertoSerie.h"

extern uint8_t dato;
uint8_t datoAnterior, estadoAnterior;
uint8_t buffer[TAM_TRAMA];
trama_serie_t trama;

static int MDE_COMUNICACIONSERIE_REPOSO(int);
static int MDE_COMUNICACIONSERIE_ESPERO_LETRA (int);
static int MDE_COMUNICACIONSERIE_RESET (int);
static int MDE_COMUNICACIONSERIE_FINALIZACION (int);

static int (*MDE_COMUNICACIONSERIE[]) (int) = {

		MDE_COMUNICACIONSERIE_REPOSO,
		MDE_COMUNICACIONSERIE_ESPERO_LETRA,
		MDE_COMUNICACIONSERIE_RESET,
		MDE_COMUNICACIONSERIE_FINALIZACION
};

static int MDE_COMUNICACIONSERIE_REPOSO (int status)
{
	if (dato == '$')
		status = ESPERO_LETRA;

	return status;
}

static int MDE_COMUNICACIONSERIE_ESPERO_LETRA (int status)
{
	switch (dato)
	{
		case 'D':
			datoAnterior = 'D';
			status = FINALIZACION;
			break;

		case 'R':
			status = RESET;
			break;

		default:
			status = REPOSO;
	}


	return status;
}

static int MDE_COMUNICACIONSERIE_RESET (int status)
{
	if (dato == 'H' || dato == 'T')
	{
		datoAnterior = dato;
		estadoAnterior = RESET;
		estado = FINALIZACION;
	}
	else status = REPOSO;

	return status;
}

static int MDE_COMUNICACIONSERIE_FINALIZACION (int status)
{
	if (dato == '#')
	{
		switch (datoAnterior)
		{
			case 'H':
				ResetHumedad();
				UART0_pushTx('$');
				UART0_pushTx('H');
				UART0_pushTx('0');
				UART0_pushTx('0');
				UART0_pushTx('#');
				break;

			case 'T':
				ResetTemperatura();
				UART0_pusTx('$');
				UART0_pusTx('T');
				UART0_pusTx('0');
				UART0_pusTx('0');
				UART0_pusTx('#');
				break;

			case 'D':
				UART0_pusTx('$');
				UART0_pusTx('D');
				UART0_pusTx(trama.ta[0]);
				UART0_pusTx(trama.ta[1]);
				UART0_pusTx(trama.ha[0]);
				UART0_pusTx(trama.ha[1]);
				UART0_pusTx(trama.TT[0]);
				UART0_pusTx(trama.TT[1]);
				UART0_pusTx(trama.HH[0]);
				UART0_pusTx(trama.HH[1]);
				UART0_pusTx(trama.tt[0]);
				UART0_pusTx(trama.tt[1]);
				UART0_pusTx(trama.hh[0]);
				UART0_pusTx(trama.hh[1]);
				UART0_pusTx('#');
				break;
		}
	}

	return REPOSO;
}

void MDE_ComunicacionSerie (void)
{
	static uint8_t estado = REPOSO;

	dato = Recibir();

	if (dato != -1) //Debo verificar que no haya error al recibir los datos
	{
		estado = (*MDE_COMUNICACIONSERIE[estado])(estado);

		if (estado < REPOSO || estado > DETENER)
				ResetComunicacionSerie();
	}
}

